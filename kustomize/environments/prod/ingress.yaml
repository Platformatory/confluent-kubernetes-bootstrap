apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-with-sni
  annotations:
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
spec:
  tls:
    - hosts:
        - kafka-prod.my.domain.com
        - b0-prod.my.domain.com
        - b1-prod.my.domain.com
        - b2-prod.my.domain.com
        - controlcenter-prod.my.domain.com
        - ksqldb-prod.my.domain.com
        - connect-prod.my.domain.com
        - schemaregistry-prod.my.domain.com
  rules:
    - host: kafka-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: kafka-bootstrap
              servicePort: 9092
    - host: b0-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: kafka-0-internal
              servicePort: 9092
    - host: b1-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: kafka-1-internal
              servicePort: 9092
    - host: b2-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: kafka-2-internal
              servicePort: 9092
    - host: controlcenter-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: controlcenter-0-internal
              servicePort: 9021
    - host: ksqldb-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: ksqldb-bootstrap
              servicePort: 8088
    - host: connect-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: connect-bootstrap
              servicePort: 8083
    - host: schemaregistry-prod.my.domain.com
      http:
        paths:
          - backend:
              serviceName: schemaregistry-bootstrap
              servicePort: 8081
